{"version":3,"sources":["stores/UserStore.js","Components/InputField/InputField.js","Components/SubmitButton/SubmitButton.js","Components/LoginForm/LoginForm.js","Components/Dash/Dash.js","Components/ListItems/ListItems.js","Components/Title/Title.js","Components/Chart/Chart.js","Components/Recent-Event/Recent-Event.js","Components/Events/Events.js","Components/LogoutButton/LogoutButton.js","Components/Dashboard/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","password","inputField","props","className","type","placeholder","value","onChange","e","target","submitButton","disabled","onClick","text","LoginForm","state","buttonDisabled","property","val","trim","length","setState","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","console","log","setInputValue","doLogin","React","Component","Dash","tickets","mainListItems","ListItem","button","component","Link","to","ListItemIcon","ListItemText","primary","path","secondaryListItems","ListSubheader","inset","Title","Typography","variant","color","gutterBottom","children","createData","time","amount","data","undefined","Chart","theme","useTheme","Fragment","margin","top","right","bottom","left","dataKey","stroke","palette","secondary","angle","position","style","textAnchor","fill","main","dot","useStyles","makeStyles","depositContext","flex","Deposits","classes","rel","href","id","date","name","shipTo","paymentMethod","rows","Orders","Table","size","TableHead","TableRow","TableCell","align","TableBody","map","row","key","logoutButton","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","Dashboard","useState","open","setOpen","fixedHeightPaper","clsx","CssBaseline","AppBar","Toolbar","IconButton","edge","aria-label","noWrap","click","Badge","badgeContent","Drawer","Divider","List","Container","maxWidth","Grid","item","xs","md","lg","Paper","App","doLogout","observer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b05d5a75.chunk.js","sourcesContent":["import { extendObservable} from 'mobx';\r\n\r\nclass UserStore {\r\n    constructor() {\r\n        extendObservable(this, {\r\n            loading: true,\r\n            isLoggedIn: true,\r\n            username: \"\",\r\n            password: \"\"\r\n        })\r\n    }\r\n}\r\n\r\nexport default new UserStore();","import React from \"react\";\r\n\r\nimport './InputField.css';\r\n\r\nconst inputField = props => {\r\n    return (\r\n        <div className=\"inputField\">\r\n            <input \r\n                className='input'\r\n                type={props.type}\r\n                placeholder={props.placeholder}\r\n                value={props.value}\r\n                onChange={ (e) => props.onChange(e.target.value)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default inputField;","import React from \"react\";\r\n\r\nimport './SubmitButton.css'\r\n\r\nconst submitButton = props => {\r\n    return (\r\n        <div className=\"submitButton\">\r\n            <button\r\n                className=\"btn\"\r\n                disabled={props.disabled}\r\n                onClick={() => props.onClick() }\r\n            >\r\n                {props.text}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default submitButton;","import React from 'react';\r\nimport InputField from '../InputField/InputField';\r\nimport SubmitButton from '../SubmitButton/SubmitButton'\r\nimport UserStore from '../../stores/UserStore';\r\n\r\nimport './LoginForm.css';\r\n\r\nclass LoginForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password:\"\",\r\n      buttonDisabled: false\r\n    }\r\n  }\r\n\r\n  setInputValue(property, val) {\r\n    val = val.trim();\r\n    if (val.length > 12) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      [property]: val\r\n    })\r\n  }\r\n\r\n  resetForm() {\r\n    this.setState ({\r\n      username:'',\r\n      password:'',\r\n      buttonDisabled:false\r\n    })\r\n  }\r\n\r\n  async doLogin() {\r\n    if (!this.state.username) { return; }\r\n    if (!this.state.password) {return; }\r\n\r\n    this.setState({ buttonDisabled: true})\r\n\r\n    try {\r\n      let res = await fetch('/login', {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          username: this.state.username,\r\n          password: this.state.password\r\n        })\r\n      })\r\n      let result = await res.json();\r\n      if (result && result.success) {\r\n        UserStore.isLoggedIn = true;\r\n        UserStore.username = result.username;\r\n      } else if (result && result.success === false) {\r\n        this.resetForm();\r\n        alert(result.msg);\r\n      }\r\n    }\r\n    catch(error) {\r\n      console.log(error);\r\n      this.resetForm();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"loginForm\">\r\n       <h2>Hello, log in please!</h2>\r\n       <InputField\r\n        type=\"text\"\r\n        placeholder=\"Username\"\r\n        value={this.state.username ? this.state.username : \"\"}\r\n        onChange={(val) => this.setInputValue('username', val)}\r\n       />\r\n       \r\n       <InputField\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={this.state.password ? this.state.password : \"\"}\r\n        onChange={(val) => this.setInputValue('password', val)}\r\n       />\r\n\r\n       <SubmitButton\r\n        text=\"Login\"\r\n        disabled={this.state.buttonDisabled}\r\n        onClick={() => this.doLogin()}\r\n       />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nimport './Dash.css';\r\n\r\nexport default function Dash(props) {\r\n    const {tickets} = props;\r\n    return (\r\n            <div className=\"dash\">\r\n            {tickets}\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\n\r\nimport Dash from '../Dash/Dash';\r\n\r\nimport {  BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nexport const mainListItems = (\r\n    <Router>\r\n  <div>\r\n    <ListItem button component={Link} to='/'>\r\n      <ListItemIcon>\r\n        <DashboardIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Dashboard\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to='/tickets'>\r\n      <ListItemIcon>\r\n        <ShoppingCartIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Tickets\" />\r\n    </ListItem>\r\n    <ListItem button  component={Link} to='/people'>\r\n      <ListItemIcon>\r\n        <PeopleIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"No of people\" />\r\n    </ListItem>\r\n    <ListItem button component={Link} to='/profits'>\r\n      <ListItemIcon>\r\n        <BarChartIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Profits\" />\r\n    </ListItem>\r\n\r\n    <Switch>\r\n      <Route path=\"/tickets\">\r\n        <Dash tickets={\"328294 sold tickets this year\"}/>\r\n      </Route>\r\n      <Route path=\"/people\">\r\n        <Dash tickets={\"239821 people at this events\"}/>\r\n      </Route>\r\n      \r\n      <Route path=\"/profits\">\r\n        <Dash tickets={\"$ 4mil as profit overall\"}/>\r\n      </Route>\r\n      <Route path=\"/\">\r\n        {console.log(\"okk\")}\r\n      </Route>\r\n    </Switch>\r\n  </div>\r\n  </Router>\r\n  \r\n);\r\n\r\nexport const secondaryListItems = (\r\n  <div>\r\n    <ListSubheader inset>Saved reports</ListSubheader>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"This year\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Last year\" />\r\n    </ListItem>\r\n    \r\n  </div>\r\n);\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Title(props) {\r\n  return (\r\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.node,\r\n};","import React from 'react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\r\nimport Title from '../Title/Title';\r\n\r\n// Generate Sales Data\r\nfunction createData(time, amount) {\r\n  return { time, amount };\r\n}\r\n\r\nconst data = [\r\n  createData('0', 0),\r\n  createData('Ian', 300),\r\n  createData('Feb', 600),\r\n  createData('Mar', 200),\r\n  createData('Apr', 200),\r\n  createData('May', 20),\r\n  createData('June', undefined),\r\n\r\n];\r\n\r\nexport default function Chart() {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Events - year 2020</Title>\r\n      <ResponsiveContainer>\r\n        <LineChart\r\n          data={data}\r\n          margin={{\r\n            top: 16,\r\n            right: 16,\r\n            bottom: 0,\r\n            left: 24,\r\n          }}\r\n        >\r\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\r\n          <YAxis stroke={theme.palette.text.secondary}>\r\n            <Label\r\n              angle={270}\r\n              position=\"left\"\r\n              style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\r\n            >\r\n              No of events\r\n            </Label>\r\n          </YAxis>\r\n          <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Title from '../Title/Title';\r\n\r\nconst useStyles = makeStyles({\r\n  depositContext: {\r\n    flex: 1,\r\n  },\r\n});\r\n\r\nexport default function Deposits() {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Recent Events</Title>\r\n      <Typography component=\"p\" variant=\"h4\">\r\n      National Book Fair\r\n      </Typography>\r\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\r\n        on 3 April, 2020\r\n      </Typography>\r\n      <div>\r\n        <Link color=\"primary\" rel=\"noopener noreferrer\" href=\"https://www.loc.gov/programs/national-book-festival/about-this-program/\"  target=\"_blank\">\r\n          View more Info\r\n        </Link>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Title from '../Title/Title';\r\n\r\n// Generate Order Data\r\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\r\n  return { id, date, name, shipTo, paymentMethod, amount };\r\n}\r\n\r\nconst rows = [\r\n  createData(0, '16 Mar, 2019', 'Elvis Presley', 'Tupelo, MS', 'VISA ⠀•••• 3719', 312.44),\r\n  createData(1, '16 Mar, 2019', 'Paul McCartney', 'London, UK', 'VISA ⠀•••• 2574', 866.99),\r\n  createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\r\n  createData(3, '16 Mar, 2019', 'Michael Jackson', 'Gary, IN', 'AMEX ⠀•••• 2000', 654.39),\r\n  createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\r\n];\r\n\r\n\r\nexport default function Orders() {\r\n  return (\r\n    <React.Fragment>\r\n      <Title>Recent Events</Title>\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Date</TableCell>\r\n            <TableCell>Name</TableCell>\r\n            <TableCell>City</TableCell>\r\n            <TableCell>Location</TableCell>\r\n            <TableCell align=\"right\">Fans</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.id}>\r\n              <TableCell>{row.date}</TableCell>\r\n              <TableCell>{row.name}</TableCell>\r\n              <TableCell>{row.shipTo}</TableCell>\r\n              <TableCell>{row.paymentMethod}</TableCell>\r\n              <TableCell align=\"right\">{row.amount}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </React.Fragment>\r\n  );\r\n}","import React from \"react\";\r\n\r\nimport './LogoutButton.css';\r\n\r\nconst logoutButton = props => {\r\n    return (\r\n        <div className=\"logoutButton\">\r\n            <button\r\n                className=\"btn\"\r\n                disabled={props.disabled}\r\n                onClick={() => props.onClick() }\r\n            >\r\n                {props.text}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default logoutButton;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\n// import Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { mainListItems, secondaryListItems } from '../ListItems/ListItems';\r\nimport Chart from '../Chart/Chart';\r\nimport Deposits from '../Recent-Event/Recent-Event';\r\nimport Events from '../Events/Events';\r\nimport LogoutButton from '../LogoutButton/LogoutButton';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nconst Dashboard = props => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Welcome, {props.username}\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n            <LogoutButton\r\n                  className=\"log-out\"\r\n                  text={'Log out'}\r\n                  disabled={false}\r\n                  onClick={props.click}\r\n              />\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>{mainListItems}</List>\r\n        <Divider />\r\n        <List>{secondaryListItems}</List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* Chart */}\r\n            <Grid item xs={12} md={8} lg={9}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Chart />\r\n              </Paper>\r\n            </Grid>\r\n            {/* Recent Deposits */}\r\n            <Grid item xs={12} md={4} lg={3}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Deposits />\r\n              </Paper>\r\n            </Grid>\r\n            {/* Recent Events */}\r\n            <Grid item xs={12}>\r\n              <Paper className={classes.paper}>\r\n                <Events />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\nimport { observer } from 'mobx-react';\n\nimport UserStore from './stores/UserStore';\nimport LoginForm from './Components/LoginForm/LoginForm';\nimport Dashboard from './Components/Dashboard/Dashboard';\n\nimport './App.css';\n\nclass App extends React.Component {\n  async componentDidMount() {\n    try {\n      let res = await fetch('/isLoggedIn', {\n        method: 'post',\n        headers: {\n          'Accept': 'application.json',\n          'Content-type': 'application/json'\n        }\n      });\n\n      let result = await res.json();\n      if (result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      } else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n    }\n    catch(error) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n  \n  async doLogout() {\n    try {\n      let res = await fetch('/logout', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/json'\n        }\n      });\n\n      let result = await res.json();\n      if (result && result.success) {\n        UserStore.isLoggedIn = false;\n        UserStore.username = \"\";\n      } \n    }\n    catch(error) {\n      console.log(error);\n    }\n  }\n \n  render() {\n    console.log(UserStore.loading);\n    if (UserStore.loading) {\n      return (\n        <div className=\"app\">\n          <div className=\"container\">\n            Loading, please wait...\n          </div>\n        </div>\n      );\n    };\n\n    // if (true) {\n    if (UserStore.isLoggedIn) {\n    return (\n        <div className=\"app\">\n        \n          <Dashboard  username={UserStore.username}\n                      click={this.doLogout}\n          />\n          \n        </div>\n      );\n    }\n\n    return (\n      <div className=\"app\">\n       <div className=\"container\">\n        <LoginForm />\n       </div>\n      </div>\n    );\n  }\n}\n\nexport default observer(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}